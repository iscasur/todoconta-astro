---
import {getFormattedSubscribersCount} from '../../utils/numbers'
import {API_URL_SENDY, API_KEY_SENDY, LIST_ID_SENDY} from 'astro:env/client'

const url = `${API_URL_SENDY}/api/subscribers/active-subscriber-count.php`
const response = await fetch(url, {
    method: 'POST',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: new URLSearchParams({
        api_key: API_KEY_SENDY,
        list_id: LIST_ID_SENDY,
    }),
})
const activeSubscriberCount = response.text()

interface Props {
  title: string,
  description?: string,
  disclaimer?: string,
}

const { title = "Suscríbete nuestro newsletter", description, disclaimer} = Astro.props;
---
<div class="prose prose-invert dark:prose bg-primary dark:bg-gray-100 border-t border-b p-4 -mx-4 md:hidden">
  <h3>{title}</h3>
  {!description && (
    <p>Únete a los {getFormattedSubscribersCount(activeSubscriberCount)} que ya lo han hecho</p>
  )}
  <form id="subscribeForm">
    <label for="email">
      <span class="hidden">Email</span>
      <input type="email" id="email" name="email" placeholder="Correo electrónico" required
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"/>
    </label>
    <input type="submit" value="¡Me uno!" class="w-full mt-2 rounded-md bg-secondary-green text-white h-10 uppercase"/>
    <span id="message"></span>
  </form>
  {!disclaimer && (
      <p class="text-xs">Puedes darte de baja cuando gustes, sin resentimientos.</p>
  )}
</div>

<script>
    import '../../scripts/subscribeSendy.ts'
</script>