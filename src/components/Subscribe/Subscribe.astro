---
import {API_URL_SENDY, API_KEY_SENDY, LIST_ID_SENDY} from 'astro:env/client'

const url = `${API_URL_SENDY}/api/subscribers/active-subscriber-count.php`
const response = await fetch(url, {
    method: 'POST',
    headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
    },
    body: new URLSearchParams({
        api_key: API_KEY_SENDY,
        list_id: LIST_ID_SENDY,
    }),
})
const activeSubscriberCount = response.text()
---
<div class="prose prose-invert dark:prose bg-[var(--primary-color)] dark:bg-gray-100 border-t border-b p-4 -mx-4 md:hidden">
  <h3>SuscrÃ­bete nuestro newsletter</h3>
  <p>Ãšnete a los {activeSubscriberCount} que ya lo han hecho</p>
  <form id="subscribeForm">
    <label for="email">
      <span class="hidden">Email</span>
      <input type="email" id="email" name="email" placeholder="Correo electrÃ³nico" required
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"/>
    </label>
    <input type="submit" value="Â¡Me uno!" class="w-full mt-2 rounded-md bg-[#00D6BC] text-white h-10 uppercase"/>
    <span id="message"></span>
  </form>
  <p>
    <small>Puede darte de baja cuando gustes, sin resentimientos.</small>
  </p>
</div>

<script>
    import {API_URL_SENDY, API_KEY_SENDY, LIST_ID_SENDY} from 'astro:env/client'

    const form = document.getElementById('subscribeForm') as HTMLFormElement;
    const messageContainer = document.getElementById('message') as HTMLElement;

    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(form);
        const data = {
            api_key: API_KEY_SENDY,
            list: LIST_ID_SENDY,
            email: formData.get('email')?.toString() || '',
            boolean: 'true',
        }

        try {
            const response = await fetch(`${API_URL_SENDY}/subscribe`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: new URLSearchParams(data),
            });

            if (response.ok) {
                const responseText = await response.text();

                if (responseText === '1') {
                    form.textContent = 'Te has suscrito con Ã©xito ðŸŽ‰';
                    if (form instanceof HTMLFormElement) {
                        form.reset()
                    } else {
                        console.error('The provided element is not a valid form.');
                    }
                } else if (responseText === 'Already subscribed.') {
                    messageContainer.textContent = 'Parece que ya te habÃ­as suscrito antes ðŸ¤”';
                } else {
                    messageContainer.textContent = `Error: ${responseText}`;
                }
            }


        } catch (e) {
            console.error('Error subscribing user:', e);
            alert('OcurriÃ³ un error al suscribirte, intenta mas tarde');
        }
    })
</script>